{"version":3,"sources":["../src/index.js"],"names":["vantage","options","mode","description","banner","delimiter","timeout","compiler","undefined","baseContext","_","Promise","console","consoleProxy","extContext","context","sandbox","Object","assign","createContext","init","args","cb","log","action","command","run","tap","output","arguments","js","resolve","reject","transformed","script","createScript","filename","displayErrors","result","runInContext","err"],"mappings":";;;;;;kBAgCe,UAASA,OAAT,EAAgC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC7C,MAAMC,OAAOD,QAAQC,IAAR,IAAgB,MAA7B;AACA,MAAMC,cAAcF,QAAQE,WAAR,IAAuB,mBAA3C;AACA,MAAMC,SAASH,QAAQG,MAAR,IAAkB,0CAAjC;AACA,MAAMC,YAAYJ,QAAQI,SAAR,IAAqB,OAAvC;AACA,MAAMC,UAAUL,QAAQK,OAAR,IAAmB,KAAnC;AACA,MAAMC,WAAWN,QAAQM,QAAR,KAAqBC,SAArB,qBAAyCP,QAAQM,QAAlE;AACA,MAAME,cAAc,EAAEC,mBAAF,EAAKC,2BAAL,EAAcC,SAASC,aAAab,OAAb,CAAvB,EAApB;AACA,MAAMc,aAAab,QAAQc,OAAR,IAAmB,EAAtC;AACA,MAAMC,UAAUC,OAAOC,MAAP,CAAc,EAAd,EAAkBT,WAAlB,EAA+BK,UAA/B,CAAhB;AACA,MAAMC,UAAU,aAAGI,aAAH,CAAiBH,OAAjB,CAAhB;;AAEAhB,UACGE,IADH,CACQA,IADR,EACcC,WADd,EAEGE,SAFH,CAEaA,SAFb,EAGGe,IAHH,CAGQ,UAASC,IAAT,EAAeC,EAAf,EAAmB;AACvB,SAAKC,GAAL,CAASnB,MAAT;AACAkB;AACD,GANH,EAOGE,MAPH,CAOU,UAASC,OAAT,EAAkB;AAAA;;AACxB,WAAOC,IAAID,OAAJ,EAAaV,OAAb,EAAsBR,QAAtB,EAAgCD,OAAhC,EACJA,OADI,CACIA,OADJ,EAEJqB,GAFI,CAEA;AAAA,aAAU,MAAKJ,GAAL,CAAS,sBAAOK,MAAP,CAAT,CAAV;AAAA,KAFA,CAAP;AAGD,GAXH;AAYD,C;;AAxDD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMf,eAAe,SAAfA,YAAe;AAAA,SAAY;AAC/BU,OAD+B,iBACzB;AACJvB,cAAQuB,GAAR,gBAAeM,SAAf;AACD;AAH8B,GAAZ;AAAA,CAArB;;AAMA,IAAMH,MAAM,SAANA,GAAM,CAACI,EAAD,EAAKf,OAAL,EAAcR,QAAd,EAAwBD,OAAxB;AAAA,SACV,uBAAY,UAACyB,OAAD,EAAUC,MAAV,EAAqB;AAC/B,QAAI;AACF,UAAMC,cAAc,OAAO1B,QAAP,KAAoB,UAApB,GAAiCA,SAASuB,EAAT,CAAjC,GAAgDA,EAApE;AACA,UAAMI,SAAS,aAAGC,YAAH,CAAgBF,WAAhB,EAA6B;AAC1CG,kBAAU,cADgC;AAE1CC,uBAAe;AAF2B,OAA7B,CAAf;;AAKA,UAAMC,SAASJ,OAAOK,YAAP,CAAoBxB,OAApB,EAA6B;AAC1CsB,uBAAe,IAD2B;AAE1C/B;AAF0C,OAA7B,CAAf;;AAKAyB,cAAQO,MAAR;AACD,KAbD,CAaE,OAAOE,GAAP,EAAY;AACZR,aAAOQ,GAAP;AACD;AACF,GAjBD,CADU;AAAA,CAAZ","file":"index.js","sourcesContent":["import vm from 'vm'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\nimport babel from './compilers/babel'\nimport format from './format'\n\nconst consoleProxy = vantage => ({\n  log() {\n    vantage.log(...arguments)\n  }\n})\n\nconst run = (js, context, compiler, timeout) =>\n  new Promise((resolve, reject) => {\n    try {\n      const transformed = typeof compiler === 'function' ? compiler(js) : js\n      const script = vm.createScript(transformed, {\n        filename: 'vantage-repl',\n        displayErrors: true\n      })\n\n      const result = script.runInContext(context, {\n        displayErrors: true,\n        timeout\n      })\n\n      resolve(result)\n    } catch (err) {\n      reject(err)\n    }\n  })\n\nexport default function(vantage, options = {}) {\n  const mode = options.mode || 'repl'\n  const description = options.description || 'Enters REPL mode.'\n  const banner = options.banner || \"Entering REPL Mode. To exit, type 'exit'\"\n  const delimiter = options.delimiter || 'repl:'\n  const timeout = options.timeout || 15000\n  const compiler = options.compiler === undefined ? babel : options.compiler\n  const baseContext = { _, Promise, console: consoleProxy(vantage) }\n  const extContext = options.context || {}\n  const sandbox = Object.assign({}, baseContext, extContext)\n  const context = vm.createContext(sandbox)\n\n  vantage\n    .mode(mode, description)\n    .delimiter(delimiter)\n    .init(function(args, cb) {\n      this.log(banner)\n      cb()\n    })\n    .action(function(command) {\n      return run(command, context, compiler, timeout)\n        .timeout(timeout)\n        .tap(output => this.log(format(output)))\n    })\n}\n"]}